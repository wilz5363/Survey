<?php
/**
 * Created by PhpStorm.
 * User: chanw
 * Date: 4/24/2017
 * Time: 11:08 PM
 */

include ('..\phpseclib\crypto.php');
include('..\phpseclib\Math\BigInteger.php');

//$g = new Math_BigInteger(generate1024bit());
//$p = new Math_BigInteger(generate1024bit());
//$d = new Math_BigInteger(generate80bit());
//
//
//
//$g2 = new Math_BigInteger(generate1024bit());
//$p2 = new Math_BigInteger(generate1024bit());
//$d2 = new Math_BigInteger(generate80bit());
//
//$key = generateKey($g,$p, $d);
//$key2 = generateKey($g2,$p2, $d2);

//$session_hash = new Math_BigInteger(1493742403);//answer level

//list($quotient, $remainder) = ($d->add($key))->divide($session_hash);
//$cipherText = new Math_BigInteger($remainder);

//$cipherText = new Math_BigInteger('1477424956',10);

//$K1= new Math_BigInteger('222234762540925641181298995291401432156908619804863382676341366413687169749552121998221735108329589642630898212428508724107651002739941326851392607695284617326705165401231629027075929791574136383095893271314966910440846454124107330048441732538228073310298606647010805488159889987186717629790463800145392514747');
//$K2 = new Math_BigInteger('134301128700557366222343237589769363501281182060177824858218566184992103445451229409545483157820021512690941645781735231048968919742462070806659586038130216480919490288559429289785406786706730676601686847443670230670383105003470375765076488812473952021504444818129109533978980552640916650741952466151639655617');
//$K3 = new Math_BigInteger('523966503090919620737322181592214980896242171979967034187122328260113510693150839523719177548410704746780708272444319440735182185334253367986718755801055975719794825450002355086176731663157301737799298861074428859015916366995964399889566635043046218548368842247108589989599161713993374885326174172210344889930');
//$key = new Math_BigInteger(($K1->add($K2))->add($K3));

//$oriCipher = new Math_BigInteger('22146492');

//$key = new Math_BigInteger('134301128700557366222343237589769363501281182060177824858218566184992103445451229409545483157820021512690941645781735231048968919742462070806659586038130216480919490288559429289785406786706730676601686847443670230670383105003470375765076488812473952021504444818129109533978980552640916650741952466151639655617', 10);


//echo $cipherText."\r\n";
//echo $key."\r\n";
//
//list($quotient2, $remainder2) = ($d2->add($key2))->divide($session_hash);
//$cipherText2 = new Math_BigInteger($remainder2);
//
//echo $cipherText2."\r\n";
//echo $key2."\r\n";
//
//list($quotient4, $remainder4) = ($cipherText->add($cipherText2))->divide($session_hash);
//$addition = new Math_BigInteger($remainder4);
//
//echo $addition."\r\n";

//list($quotient3, $remainder3) = ($oriCipher->subtract($key))->divide($session_hash);
//$count = new Math_BigInteger($remainder3);

$realCipherText = new Math_BigInteger('394357162369022732463885452829477260794215234380107379594065577305231026999770769402906947874839411129077452854101791552861694852143994089975752519494333307385665908536588173781407120409023602777381571661053642500918718801072401036744371587481165494684724022616068144051464007882714156938617519552071876272025');
$realKey = new Math_BigInteger('955703092904381970139131912356086830804329301699461121479977384146879661567842572720157256148031829636065894716279234672361296262062204342078555643448261510413365044715300770756632738449092583109273284710876082457121714282731463365052185171068564755690507729038437513664756404069737073121829892622884833534756');
$realHash = new Math_BigInteger('561345930535359237675246459526609570010114067319353741885911806841648634568071803317250308273192418506988441862177443119499601409918210252102803123953928203027699136178712596975225618040068980331891713049822439956202995481659062328307813583587399261005783706422369369613292396187022916183212373070812957262734');

list($quotient, $remainder) = ($realCipherText->subtract($realKey))->divide($realHash);
$count = new Math_BigInteger($remainder);

echo $count->value;

//$key2 = new Math_BigInteger('387369146155118836472349161975044345245348384015044242194660358899442879661148055292438959338017672123100275635921472316866906610699356449136915235139373150367122853270435481889505635064666084435150541729308068562074922979023159078680779286839570690896011483706836467833597635972066146354380213742216920028002',10);
//list($quotient, $remainder) = ($cipherText2->subtract($key))->divide($session_hash);
//
//$plainText = new Math_BigInteger($remainder);





/*
 * key = needs to be constant, depending on user choice selection, question level
 * q = needs to be constant, depending on survey selected, stored in db with rand() > 2 , survey level
 * g,p = always new 1024 bit number
 * d = user choice selection , 1 or 2, android show 01, 10 bit value
 *
 */